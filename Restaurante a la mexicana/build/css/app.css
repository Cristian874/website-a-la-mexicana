/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box;font-size:62.5%}*,:after,:before{box-sizing:inherit}*{margin:0;padding:0}img{display:block;width:100%}h1,h2,h3{font-family:Roboto,sans-serif}h1{font-weight:700}h2,h3{font-weight:500}a,li,p,span{font-family:Poppins,sans-serif;font-weight:400}a{text-decoration:none}li{list-style:none}.container{margin:0 auto;max-width:120rem;width:90%}.separation{margin-top:10rem}.click{color:#000;font-size:1.6rem}.active{background-color:#019267;border-radius:1rem;color:#fff;padding:1rem}.header{background-color:#fff;box-shadow:1rem 1rem 1rem 1rem hsla(0,0%,66%,.42);padding:2rem 0}@media(min-width:1280px){.mobile{display:none}}.mobile__logo{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.mobile__menu{cursor:pointer;width:3rem}.mobile__icon{width:5rem}.mobile__img{width:3rem}.mobile__icons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;gap:2rem}.mobile__navigation{padding:2rem 0;text-align:center}.mobile__navigation--modifier{display:none}.mobile__link--modifier{margin-bottom:2rem}.desktop__main{display:none}@media(min-width:1280px){.desktop__main{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}}.desktop__icon{width:5rem}.desktop__img{width:3rem}.desktop__list{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;gap:5rem}swiper-container{height:100%;width:100%}swiper-slide{background:#fff;display:-ms-flexbox;display:flex;font-size:18px;text-align:center;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}swiper-slide img{display:block;height:50rem;-o-object-fit:cover;object-fit:cover;width:100%}@media(min-width:1280px){swiper-slide img{height:90rem;-o-object-fit:cover;object-fit:cover}}.autoplay-progress{bottom:16px;display:-ms-flexbox;display:flex;height:48px;position:absolute;right:16px;width:48px;z-index:10;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;color:var(--swiper-theme-color);font-weight:700;justify-content:center}.autoplay-progress svg{--progress:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:10;stroke-width:4px;stroke:var(--swiper-theme-color);fill:none;stroke-dashoffset:calc((1 - var(--progress))*125.6);stroke-dasharray:125.6;-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
